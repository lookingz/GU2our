openapi: 3.0.0
info:
  title: GU2our Travel
  version: 1.0.0
  license:
    name: MIT
  description: 'This is the API for GU2our product "Travel". It exposes functionality to manage website GU2our Travel.'
  contact:
    name: Song Liu
    email: lookingz@gmail.com
servers:
  - url: 'http://127.0.0.1:5000'
paths:
  /login:
    post:
      summary: Login
      operationId: post-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
              examples:
                Login response:
                  value:
                    status: success
                    data:
                      access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTAzMjk4NTMsIm5iZiI6MTU5MDMyOTg1MywianRpIjoiNDdiNTRiNjgtYmUzNC00NTUwLTkwMjUtMGZlNWFhYWE5N2QyIiwiZXhwIjoxNTkwMzMwNzUzLCJpZGVudGl0eSI6ImxlbyIsImZyZXNoIjpmYWxzZSwidHlwZSI6ImFjY2VzcyJ9.KuONpQYBYAyO2EtiGGwYugOSjr0PqILv05wJLQ-XPPE
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      email:
                        type: string
              examples:
                Username or password not right:
                  value:
                    status: fail
                    data:
                      user:
                        email: Username or password is not right.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
              examples:
                Error:
                  value:
                    status: error
                    message: Unable to communicate with database
      description: Log in user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            examples:
              Login post:
                value:
                  email: james@gmail.com
                  password: abc
        description: ''
      tags:
        - User
  /register:
    post:
      summary: Create User
      operationId: post-register
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: ../models/user.v1.yaml
              examples:
                Created response:
                  value:
                    status: success
                    data:
                      user:
                        email: johnsmith@gmail.com
                        username: john
                        password: abc
                        photo: photo_01.jpg
                        role: user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      email:
                        type: string
              examples:
                Email already exists:
                  value:
                    status: fail
                    data:
                      user:
                        email: email has already used.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
              examples:
                Error:
                  value:
                    status: error
                    message: Unable to communicate with database
      description: Register user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/user.v1.yaml
      tags:
        - User
  /tours:
    get:
      summary: List Tours
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: ../models/tour.v1.yaml
              examples:
                Tour List:
                  value:
                    status: error
                    date:
                      tours:
                        - id: 1
                          name: The Sea Explorer
                          duration: 7
                          maxGroupSize: 15
                          difficulty: medium
                          ratingsAverage: 4.8
                          ratingsQuantity: 6
                          price: 497
                          summary: Exploring the jaw-dropping US east coast by foot and by boat
                          description: |-
                            Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                            Irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
                          imageCover: tour-2-cover.jpg
                          locations:
                            - id: 1
                              description: Lummus Park Beach
                              coordinates: '-80.128473, 25.781842'
                              day: 1
                            - id: 2
                              description: Islamorada
                              coordinates: '-80.647885, 24.909047'
                              day: 2
                            - id: 3
                              description: Sombrero Beach
                              coordinates: '-81.0784, 24.707496'
                              day: 3
                            - id: 4
                              description: West Key
                              coordinates: '-81.768719, 24.552242'
                              day: 5
                          startDates:
                            - 1592236800
                            - 1592150400
                            - 1591804800
                          images:
                            - tour-2-1.jpg
                            - tour-2-2.jpg
                            - tour-2-3.jpg
                          guides:
                            - 5c8a22c62f8fb814b56fa18b
                            - 5c8a1f4e2f8fb814b56fa185
                        - id: 2
                          name: The Forest Hiker
                          duration: 5
                          maxGroupSize: 25
                          difficulty: easy
                          ratingsAverage: 5
                          ratingsQuantity: 9
                          price: 397
                          description: |-
                            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
                            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                          imageCover: tour-1-cover.jpg
                          locations:
                            - id: 6
                              description: Banff National Park
                              coordinates: '-116.214531,51.417611'
                              day: 1
                            - id: 7
                              description: Jasper National Park
                              coordinates: '-118.076152,52.875223'
                              day: 3
                            - id: 8
                              description: Glacier National Park of Canada
                              coordinates: '-117.490309,51.261937'
                              day: 5
                          startDates:
                            - 1591718400
                            - 1591891200
                            - 1592236800
                          images:
                            - tour-1-1.jpg
                            - tour-1-2.jpg
                            - tour-1-3.jpg
                          guides:
                            - 5c8a21d02f8fb814b56fa189
                            - 5c8a201e2f8fb814b56fa186
                            - 5c8a1f292f8fb814b56fa184
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              examples:
                Error:
                  value:
                    status: error
                    message: Unable to communicate with database
      operationId: get-tours
      description: Get all tours list.
      requestBody: {}
    post:
      summary: Create Tours
      operationId: post-tours
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      tour:
                        $ref: ../models/tour.v1.yaml
      description: Create a tour.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/tour.v1.yaml
  '/tours/{tour_id}':
    parameters:
      - schema:
          type: string
        name: tour_id
        in: path
        required: true
    get:
      summary: Get Tour
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      tour:
                        $ref: ../models/tour.v1.yaml
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-tours-tour_id
      description: Get tour date though tour_id.
    patch:
      summary: Update Tour
      operationId: patch-tours-tour_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      tour:
                        $ref: ../models/tour.v1.yaml
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update tour infomation though tour_id. Only for administrator user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/tour.v1.yaml
    delete:
      summary: Delete Tour
      operationId: delete-tours-tour_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: 'null'
      description: Delete tour though tour_id. Only for administrator user.
  /bookings:
    get:
      summary: Get Booking
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  date:
                    type: array
                    items:
                      $ref: ../models/booking.v1.yaml
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-bookings
      description: Get bookings list or booking item.
      parameters:
        - schema:
            type: integer
          in: query
          name: tour_id
          description: ''
        - schema:
            type: string
          in: query
          name: user_id
      requestBody: {}
    post:
      summary: Create Booking
      operationId: post-bookings
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      booking:
                        $ref: ../models/booking.v1.yaml
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Create a booking item.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/booking.v1.yaml
    parameters: []
  /users:
    get:
      summary: List Users
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: ../models/user.v1.yaml
              examples:
                Get user list.:
                  value:
                    status: success
                    data:
                      users:
                        - email: johnsmith@gmail.com
                          username: john
                          password: abc
                          photo: photo_01.jpg
                          role: user
                        - email: kateLee@gmail.com
                          username: kate
                          password: abc
                          photo: photo_02.jpg
                          role: guide
                        - email: james@gmail.com
                          username: james
                          password: abc
                          photo: photo_00.jpg
                          role: administrator
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
              examples:
                Error:
                  value:
                    status: error
                    message: Unable to communicate with database
      operationId: get-users
      description: Get all users list. Only for Administrator user.
  '/users/{user_id}':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    get:
      summary: Get User
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: ../models/user.v1.yaml
              examples:
                Get one user though user_id.:
                  value:
                    status: success
                    data:
                      user:
                        email: johnsmith@gmail.com
                        username: john
                        password: abc
                        photo: photo_01.jpg
                        role: user
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      email:
                        type: string
              examples:
                User not found:
                  value:
                    status: fail
                    data:
                      user:
                        email: User with this email is not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
              examples:
                Error:
                  value:
                    status: error
                    message: Unable to communicate with database
      operationId: get-users-user_id
      description: Get user data though user_id.
    patch:
      summary: Update User
      operationId: patch-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: ../models/user.v1.yaml
              examples:
                Update response:
                  value:
                    status: success
                    data:
                      user:
                        email: johnsmith@gmail.com
                        username: john
                        password: abc
                        photo: photo_01.jpg
                        role: user
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      email:
                        type: string
              examples:
                User not found:
                  value:
                    status: fail
                    data:
                      user:
                        email: User with this email is not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
              examples:
                Error:
                  value:
                    status: error
                    message: Unable to communicate with database
      description: Update user profile though user_id.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/user.v1.yaml
    delete:
      summary: Delete User
      operationId: delete-users-user_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: 'null'
              examples:
                Delete success response:
                  value:
                    status: success
                    data: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  date:
                    type: object
                    properties:
                      email:
                        type: string
              examples:
                User not found:
                  value:
                    status: fail
                    data:
                      user:
                        email: User with this email is not found.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
              examples:
                Error:
                  value:
                    status: error
                    message: Unable to communicate with database
      description: Delete user though user_id. Only for Administrator user.
  /reviews:
    get:
      summary: Get Review
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: ../models/review.v1.yaml
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-reviews
      description: Get reviews list or review item.
    post:
      summary: Create Review
      operationId: post-reviews
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      review:
                        $ref: ../models/review.v1.yaml
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Create a review.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/review.v1.yaml
components:
  schemas: {}
  securitySchemes:
    access_token:
      name: access_token
      type: apiKey
      in: query
